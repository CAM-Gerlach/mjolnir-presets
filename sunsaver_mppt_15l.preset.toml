config_version = 1
name = "sunsaver_mppt_15l"
type = "device"

[metadata]
name_full = "Morningstar Sunsaver MPPT-15L charge controller"
author = "C.A.M. Gerlach and the UAH HAMMA group"
description = "Device preset for the Morningstar Sunsaver MPPT-15L charge controller"
homepage = "https://hamma.dev/"
repo = "https://github.com/hamma-dev/mjolnir-presets"
version = "0.1.0"
brokkr_version_min = "0.3.0"

[type_presets]
_V = { conversion = "custom", scale = 100, base = 2, power = -15, digits = 3 }
_V_ref = { conversion = "custom", scale = 96.667, base = 2, power = -15, digits = 3 }
_A = { conversion = "custom", scale = 79.16, base = 2, power = -15, digits = 3 }
_A_h = { conversion = "custom", scale = 0.1, digits = 1 }
_W = { conversion = "custom", scale = 989.5, base = 2, power = -16, digits = 3 }

[data_types]
adc_vb_f = { type_presets = "_V" }
adc_va_f = { type_presets = "_V" }
adc_vl_f = { type_presets = "_V" }
adc_ic_f = { type_presets = "_A" }
adc_il_f = { type_presets = "_A" }
t_hs = { input_type = "h" }
t_batt = { input_type = "h" }
t_amb = { input_type = "h" }
t_rts = { input_type = "h" }
charge_state = {}
array_fault = { conversion = "bitfield" }
vb_f = { type_presets = "_V" }
vb_ref = { type_presets = "_V_ref" }
ahc_r = { input_type = "I", type_presets = "_A_h" }
ahc_t = { input_type = "I", type_presets = "_A_h" }
kwhc = { type_presets = "_A_h" }
load_state = {}
load_fault = { conversion = "bitfield" }
v_lvd = { type_presets = "_V" }
ahl_r = { input_type = "I", type_presets = "_A_h" }
ahl_t = { input_type = "I", type_presets = "_A_h" }
hourmeter = { input_type = "I" }
alarm = { input_type = "I", conversion = "bitfield" }
dip_switch = { conversion = "bitfield" }
led_state = {}
power_out = { type_presets = "_W" }
sweep_vmp = { type_presets = "_V" }
sweep_pmax = { type_presets = "_W" }
sweep_voc = { type_presets = "_V" }
vb_min_daily = { type_presets = "_V" }
vb_max_daily = { type_presets = "_V" }
ahc_daily = { type_presets = "_A_h" }
ahl_daily = { type_presets = "_A_h" }
array_fault_daily = { conversion = "bitfield" }
load_fault_daily = { conversion = "bitfield" }
alarm_daily = { input_type = "I", conversion = "bitfield" }
vb_min = { type_presets = "_V" }
vb_max = { type_presets = "_V" }

[inputs.ram]
_module_path = "brokkr.inputs.modbus"
_class_name = "ModbusSerialInput"
name = "Charge Controller RAM Status Data"
unit = 1
start_address = 0x0008
serial_port = ""
serial_pids = [ 24597 ]
try_usb_reset = true
modbus_kwargs.baudrate = 9600
modbus_kwargs.parity = "N"
modbus_kwargs.stopbits = 2
modbus_kwargs.strict = false
data_types = [
    "adc_vb_f",
    "adc_va_f",
    "adc_vl_f",
    "adc_ic_f",
    "adc_il_f",
    "t_hs",
    "t_batt",
    "t_amb",
    "t_rts",
    "charge_state",
    "array_fault",
    "vb_f",
    "vb_ref",
    "ahc_r",
    "ahc_t",
    "kwhc",
    "load_state",
    "load_fault",
    "v_lvd",
    "ahl_r",
    "ahl_t",
    "hourmeter",
    "alarm",
    "dip_switch",
    "led_state",
    "power_out",
    "sweep_vmp",
    "sweep_pmax",
    "sweep_voc",
    "vb_min_daily",
    "vb_max_daily",
    "ahc_daily",
    "ahl_daily",
    "array_fault_daily",
    "load_fault_daily",
    "alarm_daily",
    "vb_min",
    "vb_max",
]
